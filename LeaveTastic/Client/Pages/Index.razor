@page "/"

<RadzenCard class="d-flex align-items-center ">
    <RadzenText class="my-0 mx-3" TextStyle=TextStyle.DisplayH6 Text="Select user"></RadzenText>
    <RadzenDropDown TValue=int Data="employees" TextProperty="Name" ValueProperty="Id" Value="helperService.SelectedEmployee.Id" ValueChanged="EmployeeSelected" />
</RadzenCard>

@if (helperService.SelectedEmployee.RoleId != null)
{
    <EmployPage></EmployPage>
}
else
{
    <PageTitle>Index</PageTitle>
    <RadzenText TextStyle=TextStyle.DisplayH3 Text="Select user" />
    <RadzenText TextStyle=TextStyle.Body2 Text="You must select a user, in order to use the app" />
}

@code {
    [Inject]
    HelperService helperService { get; set; } = default!;

    private List<Employee> employees { get; set; } = new();

    private bool isVisible = true;

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var response = await helperService.HttpService.Get<DataResponse<List<Employee>>>("api/employee"); //Get list of all employees
        if (!response.HasError)
        {
            employees.AddRange(response.Data);
        }
    }

    private async Task EmployeeSelected(int employeeId)
    {
        Employee? employee = employees.Where(x => x.Id == employeeId).FirstOrDefault();
        await helperService.SelectEmployee(employee);
        StateHasChanged();
    }
}
