// <auto-generated />
using System;
using LeaveTastic.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LeaveTastic.Server.Migrations
{
    [DbContext(typeof(LeaveTasticDatabaseContext))]
    [Migration("20230122150049_Re-Desinged")]
    partial class ReDesinged
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LeaveTastic.Shared.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LeaveDays")
                        .HasColumnType("int");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Employee", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LeaveDays = 0,
                            ManagerId = 6,
                            Name = "Employ 1",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            LeaveDays = 0,
                            ManagerId = 6,
                            Name = "Employ 2",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            LeaveDays = 0,
                            ManagerId = 6,
                            Name = "Employ 3",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 4,
                            LeaveDays = 0,
                            ManagerId = 7,
                            Name = "Employ 4",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 5,
                            LeaveDays = 0,
                            ManagerId = 8,
                            Name = "Employ 5",
                            RoleId = 1
                        },
                        new
                        {
                            Id = 6,
                            LeaveDays = 0,
                            Name = "Department Manager 1",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 7,
                            LeaveDays = 0,
                            Name = "Department Manager 2",
                            RoleId = 2
                        },
                        new
                        {
                            Id = 8,
                            LeaveDays = 0,
                            Name = "Human Resources Manager",
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("LeaveTastic.Shared.Models.Leave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfLeave")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsApproved")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(CONVERT([bit],(0)))");

                    b.Property<bool?>("IsDeleted")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(CONVERT([bit],(0)))");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Leave", (string)null);
                });

            modelBuilder.Entity("LeaveTastic.Shared.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Employ"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Department Manager"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Human Resources Manager"
                        });
                });

            modelBuilder.Entity("LeaveTastic.Shared.Models.Employee", b =>
                {
                    b.HasOne("LeaveTastic.Shared.Models.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_Employee_RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("LeaveTastic.Shared.Models.Leave", b =>
                {
                    b.HasOne("LeaveTastic.Shared.Models.Employee", "Employee")
                        .WithMany("Leaves")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_Leave_EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("LeaveTastic.Shared.Models.Employee", b =>
                {
                    b.Navigation("Leaves");
                });

            modelBuilder.Entity("LeaveTastic.Shared.Models.Role", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
